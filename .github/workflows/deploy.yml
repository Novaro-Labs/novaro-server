# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: deploy go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest 
    steps:
    - uses: actions/checkout@v2 

    - name: Set up Go
      uses: actions/setup-go@v2 
      with:
        go-version: 1.22.3

    - name: Build 
      run: CGO_ENABLED=0 go build -o novaro-server cmd/main.go

    - name: SCP Files 
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        port: ${{ secrets.REMOTE_PORT }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: 'novaro-server'
        target: ${{ secrets.REMOTE_TARGET }}

    - name: SSH Remote Commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        port: ${{ secrets.REMOTE_PORT }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: (kill -9 $(ps -ef | grep novaro-server | grep -v grep | awk '{print $2}') ) 2>/dev/null; cd /home/ec2-user/novaro-server && nohup ./novaro-server > novaro-output.log 2>&1 &
